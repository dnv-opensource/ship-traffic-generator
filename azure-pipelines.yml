# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:
  - job: Linux
    pool:
      vmImage: ubuntu-latest
    strategy:
      matrix:
        Python39:
          python.version: '3.9'
        Python310:
          python.version: '3.10'
    
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'
    
    - script: |
        python -m pip install --upgrade pip
        pip install pipx
        pipx install poetry
        poetry install --with dev
      displayName: 'Install dependencies'

    - script: |
        pip install pytest-azurepipelines
        pytest
      displayName: 'pytest'
    
    - script: |
        flake8 *.py
        flake8 src/trafficgen/*.py
      displayName: 'Linting with flake8'


  - job: Windows
    pool:
      vmImage: 'windows-latest'
    strategy:
      matrix:
        Python39:
          python.version: '3.9'
        Python310:
          python.version: '3.10'
    steps:
    - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
      displayName: 'Add conda to PATH'
    - script: |
        conda env create --quiet --file condaenv.yml python=%PYTHON_VERSION%
      displayName: 'Create conda env'
    - script: |
        call activate testenv
        pip install pipx
        pipx install poetry
        poetry install --with dev
        pip install pytest-azurepipelines
        pytest
      displayName: 'pytest'
    - script: |
        call activate testenv
        flake8 .\setup.py
        flake8 .\src\trafficgen\
      displayName: 'Linting with flake8'